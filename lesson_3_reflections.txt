When would you want to use a remote repository rather than keeping all your work local?

I would want a remote repository when working on collaborative projects with other people or 
when I need to use a different computer to make changes. 


Why might you want to always pull changes manually rather than having Git automatically stay 
up-to-date with your remote repository?

Pulling changes manually allows you to determine what changes you pull and when you pull them.
Allowing Git to do so automatically could mean that you get incomplete changes or a change that 
could break your project.

Describe the differences between forks, clones, and branches. When would you use one instead of another?

Forks allow you to make changes to a repository and host them on your account with a link to the original.
Clones allow you to clone any repository and work on it, but will not allow you to push your commits to the 
original without permission.
Branches are used when something new has been added to the project, but is not quite ready to be shown. 

I would use a fork instead of just cloning a repository if I wanted to make changes to a project that I 
did not have permission to actually change. Doing this I would fork the repository to my account and then,
if needed, clone it to my local machine before making changes.


What is the benefit of having a copy of the last known state of the remote stored locally?

It allows you to know what has been changed if you are about to go somewhere where you will not have 
internet access for a period of time, but still need to do some work. It also allows you to see the last changes 
made to the remote and possibly help you avoid conflict with your own commits.


How would you collaborate without using Git or GitHub? What would be easier and what would be harder?

Without using Git or GitHub, you would have to collaborate using some other form of communication or version control.
You could decide to collaborate in person and decide on changes while together, but that seems tedious and you wouldn't 
get too much done. You could also try to use a different system. 

Using Git and GitHub is far easier than trying to find other ways to collaborate with others. Having to meet in person or over 
Skype would be tedious and cause issues. You could create a private chat room for you and your collaborators somewhere, but that 
would still require others being around at the same times that you are.


When would you want to make changes in a seperate branch rather than directly in master? What benefits does each approach have?

You would want to make a seperate branch when working on a new feature that is not in any way a part of the project yet. It allows 
you to make changes to the code without fear of breaking the already usable code in the master branch. It also makes it easier to 
distinguish what changes are being made to the project through a pull request.

Making changes directly to master would be used more for bug fixes or small changes that don't add or remove anything significant, 
while using branches can allow you to make big changes easier and be sure that everything works properly before pushing them to the 
master branch. The benefit of using only the master branch is that it makes it less complicated and I think has more uses for smaller 
or personal projects. Using branches benefits collaberative projects by being able to distinguish exactly what is being added.